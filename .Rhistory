# - Plot QQ plots with Normal and Poisson distribution
g1 <- students.math %>% pull(G1)
g2 <- students.math %>% pull(G2)
g3 <- students.math %>% pull(G3)
ggplot(students.math, aes(x = G1)) +
geom_histogram(position = "identity",
alpha = 0.5,
bins = 30) +
labs(title = "Histogram of G1",
x = "Grade",
y = "Frequency") +
stat_function(fun = dnorm,
args = c(mean = mean(g1), sd = sd(g1)),
color = "red")
# Identify the distribution of each of G1, G2, and G3:
# - Plot histograms
# - Plot QQ plots with Normal and Poisson distribution
g1 <- students.math %>% pull(G1)
g2 <- students.math %>% pull(G2)
g3 <- students.math %>% pull(G3)
ggplot(students.math, aes(x = G1)) +
geom_histogram(aes(y = after_stat(density)),
position = "identity",
alpha = 0.5,
bins = 30) +
labs(title = "Histogram of G1",
x = "Grade",
y = "Frequency") +
stat_function(fun = dnorm,
args = c(mean = mean(g1), sd = sd(g1)),
color = "red")
# Identify the distribution of each of G1, G2, and G3:
# - Plot histograms
# - Plot QQ plots with Normal and Poisson distribution
g1 <- data.frame(students.math %>% pull(G1))
g2 <- data.frame(students.math %>% pull(G2))
g3 <- data.frame(students.math %>% pull(G3))
ggplot(g1, aes(x = G1)) +
geom_histogram(aes(y = after_stat(density)),
position = "identity",
alpha = 0.5,
bins = 30) +
labs(title = "Histogram of G1",
x = "Grade",
y = "Frequency") +
stat_function(fun = dnorm,
args = c(mean = mean(g1), sd = sd(g1)),
color = "red")
# Identify the distribution of each of G1, G2, and G3:
# - Plot histograms
# - Plot QQ plots with Normal and Poisson distribution
g1 <- data.frame(students.math %>% pull(G1))
g2 <- data.frame(students.math %>% pull(G2))
g3 <- data.frame(students.math %>% pull(G3))
ggplot(students.math, aes(x = G1)) +
geom_histogram(aes(y = after_stat(density)),
position = "identity",
alpha = 0.5,
bins = 30) +
labs(title = "Histogram of G1",
x = "Grade",
y = "Frequency") +
stat_function(fun = dnorm,
args = c(mean = mean(g1), sd = sd(g1)),
color = "red")
# Identify the distribution of each of G1, G2, and G3:
# - Plot histograms
# - Plot QQ plots with Normal and Poisson distribution
g1 <- students.math %>% pull(G1)
g2 <- students.math %>% pull(G2)
g3 <- students.math %>% pull(G3)
ggplot(students.math, aes(x = G1)) +
geom_histogram(aes(y = after_stat(density)),
position = "identity",
alpha = 0.5,
bins = 30) +
labs(title = "Histogram of G1",
x = "Grade",
y = "Frequency") +
stat_function(fun = dnorm,
args = c(mean = mean(g1), sd = sd(g1)),
color = "red")
ggplot(data.frame(g1 = g1), aes(sample = G1)) +
geom_qq() +
geom_qq_line(col = "red") +
labs(x = "Theoretical Quantiles",
y = "Empirical Quantiles",
title = "QQ: pH of Good Wines against Normal Distr.")
# Identify the distribution of each of G1, G2, and G3:
# - Plot histograms
# - Plot QQ plots with Normal and Poisson distribution
g1 <- students.math %>% pull(G1)
g2 <- students.math %>% pull(G2)
g3 <- students.math %>% pull(G3)
ggplot(students.math, aes(x = G1)) +
geom_histogram(aes(y = after_stat(density)),
position = "identity",
alpha = 0.5,
bins = 30) +
labs(title = "Histogram of G1",
x = "Grade",
y = "Frequency") +
stat_function(fun = dnorm,
args = c(mean = mean(g1), sd = sd(g1)),
color = "red")
ggplot(data.frame(g1 = g1), aes(sample = g1)) +
geom_qq() +
geom_qq_line(col = "red") +
labs(x = "Theoretical Quantiles",
y = "Empirical Quantiles",
title = "QQ: pH of Good Wines against Normal Distr.")
library("tidyverse")
library("ggplot2")
students.math <- read.csv("student-mat.csv", sep = ",")
head(students.math)
# Identify the distribution of each of G1, G2, and G3:
# - Plot histograms
# - Plot QQ plots with Normal and Poisson distribution
g1 <- students.math %>% pull(G1)
g2 <- students.math %>% pull(G2)
g3 <- students.math %>% pull(G3)
ggplot(students.math, aes(x = G1)) +
geom_histogram(aes(y = after_stat(density)),
position = "identity",
alpha = 0.5,
bins = 30) +
labs(title = "Histogram of G1",
x = "Grade",
y = "Frequency") +
stat_function(fun = dnorm,
args = c(mean = mean(g1), sd = sd(g1)),
color = "red")
ggplot(data.frame(g1 = g1), aes(sample = g1)) +
geom_qq() +
geom_qq_line(col = "red") +
labs(x = "Theoretical Quantiles",
y = "Empirical Quantiles",
title = "QQ: Grades against Normal Distr.")
ggplot(students.math, aes(x = G1)) +
geom_histogram(aes(y = after_stat(density)),
position = "identity",
alpha = 0.5,
bins = 30) +
labs(title = "Histogram of G1",
x = "Grade",
y = "Frequency") +
stat_function(fun = dpois,
args = c(mean = mean(g1), sd = sd(g1)),
color = "red")
ggplot(data.frame(g1 = g1), aes(sample = g1)) +
geom_qq() +
geom_qq_line(col = "red") +
labs(x = "Theoretical Quantiles",
y = "Empirical Quantiles",
title = "QQ: Grades against Normal Distr.")
?dpois
# Identify the distribution of each of G1, G2, and G3:
# - Plot histograms
# - Plot QQ plots with Normal and Poisson distribution
g1 <- students.math %>% pull(G1)
g2 <- students.math %>% pull(G2)
g3 <- students.math %>% pull(G3)
ggplot(students.math, aes(x = G1)) +
geom_histogram(aes(y = after_stat(density)),
position = "identity",
alpha = 0.5,
bins = 30) +
labs(title = "Histogram of G1",
x = "Grade",
y = "Frequency") +
stat_function(fun = dnorm,
args = c(mean = mean(g1), sd = sd(g1)),
color = "red")
ggplot(data.frame(g1 = g1), aes(sample = g1)) +
geom_qq() +
geom_qq_line(col = "red") +
labs(x = "Theoretical Quantiles",
y = "Empirical Quantiles",
title = "QQ: Grades against Normal Distr.") +
stat_function(fun = dpois,
args = c(x, lambda = mean(g1)),
color = "red")
# Identify the distribution of each of G1, G2, and G3:
# - Plot histograms
# - Plot QQ plots with Normal and Poisson distribution
g1 <- students.math %>% pull(G1)
g2 <- students.math %>% pull(G2)
g3 <- students.math %>% pull(G3)
ggplot(students.math, aes(x = G1)) +
geom_histogram(aes(y = after_stat(density)),
position = "identity",
alpha = 0.5,
bins = 30) +
labs(title = "Histogram of G1",
x = "Grade",
y = "Frequency") +
stat_function(fun = dnorm,
args = c(mean = mean(g1), sd = sd(g1)),
color = "red")
ggplot(data.frame(g1 = g1), aes(sample = g1)) +
geom_qq() +
geom_qq_line(col = "red") +
labs(x = "Theoretical Quantiles",
y = "Empirical Quantiles",
title = "QQ: Grades against Normal Distr.") +
stat_function(fun = function(x) dpois(x, lambda = mean(g1)),
color = "red")
# Identify the distribution of each of G1, G2, and G3:
# - Plot histograms
# - Plot QQ plots with Normal and Poisson distribution
g1 <- students.math %>% pull(G1)
g2 <- students.math %>% pull(G2)
g3 <- students.math %>% pull(G3)
ggplot(students.math, aes(x = G1)) +
geom_histogram(aes(y = after_stat(density)),
position = "identity",
alpha = 0.5,
bins = 30) +
labs(title = "Histogram of G1",
x = "Grade",
y = "Frequency") +
stat_function(fun = dnorm,
args = c(mean = mean(g1), sd = sd(g1)),
color = "red")
ggplot(data.frame(g1 = g1), aes(sample = g1)) +
geom_qq() +
geom_qq_line(col = "red") +
labs(x = "Theoretical Quantiles",
y = "Empirical Quantiles",
title = "QQ: Grades against Normal Distr.")
ggplot(students.math, aes(x = G1)) +
geom_histogram(aes(y = after_stat(density)),
position = "identity",
alpha = 0.5,
bins = 30) +
labs(title = "Histogram of G1",
x = "Grade",
y = "Frequency") +
stat_function(fun = dpois,
args = c(x, lambda = mean(g1)),
color = "red")
# Identify the distribution of each of G1, G2, and G3:
# - Plot histograms
# - Plot QQ plots with Normal and Poisson distribution
g1 <- students.math %>% pull(G1)
g2 <- students.math %>% pull(G2)
g3 <- students.math %>% pull(G3)
ggplot(students.math, aes(x = G1)) +
geom_histogram(aes(y = after_stat(density)),
position = "identity",
alpha = 0.5,
bins = 30) +
labs(title = "Histogram of G1",
x = "Grade",
y = "Frequency") +
stat_function(fun = dnorm,
args = c(mean = mean(g1), sd = sd(g1)),
color = "red")
ggplot(data.frame(g1 = g1), aes(sample = g1)) +
geom_qq() +
geom_qq_line(col = "red") +
labs(x = "Theoretical Quantiles",
y = "Empirical Quantiles",
title = "QQ: Grades against Normal Distr.")
ggplot(students.math, aes(x = G1)) +
geom_histogram(aes(y = after_stat(density)),
position = "identity",
alpha = 0.5,
bins = 30) +
labs(title = "Histogram of G1",
x = "Grade",
y = "Frequency") +
stat_function(fun = function(x) dpois(x, lambda = mean(g1)),
color = "red")
# Identify the distribution of each of G1, G2, and G3:
# - Plot histograms
# - Plot QQ plots with Normal and Poisson distribution
g1 <- students.math %>% pull(G1)
g2 <- students.math %>% pull(G2)
g3 <- students.math %>% pull(G3)
ggplot(students.math, aes(x = G1)) +
geom_histogram(aes(y = after_stat(density)),
position = "identity",
alpha = 0.5,
bins = 30) +
labs(title = "Histogram of G1",
x = "Grade",
y = "Frequency") +
stat_function(fun = dnorm,
args = c(mean = mean(g1), sd = sd(g1)),
color = "red")
ggplot(data.frame(g1 = g1), aes(sample = g1)) +
geom_qq() +
geom_qq_line(col = "red") +
labs(x = "Theoretical Quantiles",
y = "Empirical Quantiles",
title = "QQ: Grades against Normal Distr.")
lambda <- mean(g1)
# Plot histogram with Poisson distribution overlay
ggplot(students.math, aes(x = G1)) +
geom_histogram(aes(y = after_stat(density)),
position = "identity",
alpha = 0.5,
bins = 30) +
labs(title = "Histogram of G1",
x = "Grade",
y = "Density") +
stat_function(fun = function(x) dpois(x, lambda),
color = "red") +
labs(title = "Histogram of G1 with Poisson Distribution",
x = "Grade",
y = "Density")
# QQ Plot for Poisson Distribution
ggplot(data.frame(g1 = g1), aes(sample = g1)) +
stat_qq(distribution = qpois, dparams = lambda) +
stat_qq_line(distribution = qpois, dparams = lambda, col = "red") +
labs(x = "Theoretical Quantiles",
y = "Empirical Quantiles",
title = "QQ Plot: Grades against Poisson Distribution")
# Identify the distribution of each of G1, G2, and G3:
# - Plot histograms
# - Plot QQ plots with Normal and Poisson distribution
g1 <- students.math %>% pull(G1)
g2 <- students.math %>% pull(G2)
g3 <- students.math %>% pull(G3)
ggplot(students.math, aes(x = G1)) +
geom_histogram(aes(y = after_stat(density)),
position = "identity",
alpha = 0.5,
bins = 30) +
labs(title = "Histogram of G1",
x = "Grade",
y = "Frequency") +
stat_function(fun = dnorm,
args = c(mean = mean(g1), sd = sd(g1)),
color = "red")
ggplot(data.frame(g1 = g1), aes(sample = g1)) +
geom_qq() +
geom_qq_line(col = "red") +
labs(x = "Theoretical Quantiles",
y = "Empirical Quantiles",
title = "QQ: Grades against Normal Distr.")
lambda <- mean(g1)
# Custom Poisson density function to handle non-integer x values
poisson_density <- function(x, lambda) {
dpois(round(x), lambda)
}
# Plot histogram with Poisson distribution overlay
ggplot(students.math, aes(x = G1)) +
geom_histogram(aes(y = after_stat(density)),
position = "identity",
alpha = 0.5,
bins = 30) +
labs(title = "Histogram of G1",
x = "Grade",
y = "Density") +
stat_function(fun = poisson_density,
args = list(lambda = lambda),
color = "red") +
labs(title = "Histogram of G1 with Poisson Distribution",
x = "Grade",
y = "Density")
# QQ Plot for Poisson Distribution
ggplot(data.frame(g1 = g1), aes(sample = g1)) +
stat_qq(distribution = qpois, dparams = lambda) +
stat_qq_line(distribution = qpois, dparams = lambda, col = "red") +
labs(x = "Theoretical Quantiles",
y = "Empirical Quantiles",
title = "QQ Plot: Grades against Poisson Distribution")
# Identify the distribution of each of G1, G2, and G3:
# - Plot histograms
# - Plot QQ plots with Normal and Poisson distribution
g1 <- students.math %>% pull(G1)
g2 <- students.math %>% pull(G2)
g3 <- students.math %>% pull(G3)
ggplot(students.math, aes(x = G1)) +
geom_histogram(aes(y = after_stat(density)),
position = "identity",
alpha = 0.5,
bins = 30) +
labs(title = "Histogram of G1",
x = "Grade",
y = "Frequency") +
stat_function(fun = dnorm,
args = c(mean = mean(g1), sd = sd(g1)),
color = "red")
ggplot(data.frame(g1 = g1), aes(sample = g1)) +
geom_qq() +
geom_qq_line(col = "red") +
labs(x = "Theoretical Quantiles",
y = "Empirical Quantiles",
title = "QQ: Grades against Normal Distr.")
lambda <- mean(g1)
# Custom Poisson density function to handle non-integer x values
poisson_density <- function(x, lambda) {
dpois(round(x), lambda)
}
# Plot histogram with Poisson distribution overlay
ggplot(students.math, aes(x = G1)) +
geom_histogram(aes(y = after_stat(density)),
position = "identity",
alpha = 0.5,
bins = 30) +
labs(title = "Histogram of G1",
x = "Grade",
y = "Density") +
stat_function(fun = dpois,
args = c(round(x), mean(g1)),
color = "red") +
labs(title = "Histogram of G1 with Poisson Distribution",
x = "Grade",
y = "Density")
# QQ Plot for Poisson Distribution
ggplot(data.frame(g1 = g1), aes(sample = g1)) +
stat_qq(distribution = qpois, dparams = lambda) +
stat_qq_line(distribution = qpois, dparams = lambda, col = "red") +
labs(x = "Theoretical Quantiles",
y = "Empirical Quantiles",
title = "QQ Plot: Grades against Poisson Distribution")
# Identify the distribution of each of G1, G2, and G3:
# - Plot histograms
# - Plot QQ plots with Normal and Poisson distribution
g1 <- students.math %>% pull(G1)
g2 <- students.math %>% pull(G2)
g3 <- students.math %>% pull(G3)
ggplot(students.math, aes(x = G1)) +
geom_histogram(aes(y = after_stat(density)),
position = "identity",
alpha = 0.5,
bins = 30) +
labs(title = "Histogram of G1",
x = "Grade",
y = "Frequency") +
stat_function(fun = dnorm,
args = c(mean = mean(g1), sd = sd(g1)),
color = "red")
ggplot(data.frame(g1 = g1), aes(sample = g1)) +
geom_qq() +
geom_qq_line(col = "red") +
labs(x = "Theoretical Quantiles",
y = "Empirical Quantiles",
title = "QQ: Grades against Normal Distr.")
lambda <- mean(g1)
# Custom Poisson density function to handle non-integer x values
poisson_density <- function(x, lambda) {
dpois(round(x), lambda)
}
# Plot histogram with Poisson distribution overlay
ggplot(students.math, aes(x = G1)) +
geom_histogram(aes(y = after_stat(density)),
position = "identity",
alpha = 0.5,
bins = 30) +
labs(title = "Histogram of G1",
x = "Grade",
y = "Density") +
stat_function(fun = function(x) dpois(round(x), mean(g1)),
color = "red") +
labs(title = "Histogram of G1 with Poisson Distribution",
x = "Grade",
y = "Density")
# QQ Plot for Poisson Distribution
ggplot(data.frame(g1 = g1), aes(sample = g1)) +
stat_qq(distribution = qpois, dparams = lambda) +
stat_qq_line(distribution = qpois, dparams = lambda, col = "red") +
labs(x = "Theoretical Quantiles",
y = "Empirical Quantiles",
title = "QQ Plot: Grades against Poisson Distribution")
# Identify the distribution of each of G1, G2, and G3:
# - Plot histograms
# - Plot QQ plots with Normal and Poisson distribution
g1 <- students.math %>% pull(G1)
g2 <- students.math %>% pull(G2)
g3 <- students.math %>% pull(G3)
ggplot(students.math, aes(x = G1)) +
geom_histogram(aes(y = after_stat(density)),
position = "identity",
alpha = 0.5,
bins = 30) +
labs(title = "Histogram of G1",
x = "Grade",
y = "Frequency") +
stat_function(fun = dnorm,
args = c(mean = mean(g1), sd = sd(g1)),
color = "red")
ggplot(data.frame(g1 = g1), aes(sample = g1)) +
geom_qq() +
geom_qq_line(col = "red") +
labs(x = "Theoretical Quantiles",
y = "Empirical Quantiles",
title = "QQ: Grades against Normal Distr.")
# Plot histogram with Poisson distribution overlay
ggplot(students.math, aes(x = G1)) +
geom_histogram(aes(y = after_stat(density)),
position = "identity",
alpha = 0.5,
bins = 30) +
labs(title = "Histogram of G1",
x = "Grade",
y = "Density") +
stat_function(fun = function(x) dpois(round(x), mean(g1)),
color = "red") +
labs(title = "Histogram of G1 with Poisson Distribution",
x = "Grade",
y = "Density")
# QQ Plot for Poisson Distribution
ggplot(data.frame(g1 = g1), aes(sample = g1)) +
stat_qq(distribution = qpois, dparams = mean(g1)) +
stat_qq_line(distribution = qpois, dparams = mean(g1), col = "red") +
labs(x = "Theoretical Quantiles",
y = "Empirical Quantiles",
title = "QQ Plot: Grades against Poisson Distribution")
