geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, fill = "red") +
labs(title = "Empirical Distribution Functions of pH for Good Wines",
x = "pH",
y = "Cumulative Probability")
# Plot bad wines
ggplot(ecdf.bad, aes(x = x, y = y)) +
geom_step() +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, fill = "red") +
labs(title = "Empirical Distribution Functions of pH for Bad Wines",
x = "pH",
y = "Cumulative Probability")
# Function to calculate ecdf and confidence intervals
ecdf.with.ci <- function(data, alpha = 0.05) {
n <- length(data)
ecdf.data <- ecdf(data)
x <- sort(unique(data))
y <- ecdf.data(x)
epsilon <- sqrt((1/(2*n)) * log(2/alpha))
lower <- pmax(y - epsilon, 0)
upper <- pmin(y + epsilon, 1)
data.frame(x = x, y = y, lower = lower, upper = upper)
}
pH.good <- working.df %>% filter(good == 1) %>% pull(pH)
pH.bad <- working.df %>% filter(good == 0) %>% pull(pH)
pH.all <- working.df %>% pull(pH)
ecdf.all <- ecdf.with.ci(pH.all)
ecdf.good <- ecdf.with.ci(pH.good)
ecdf.bad <- ecdf.with.ci(pH.bad)
# Plot all wines
ggplot(ecdf.all, aes(x = x, y = y)) +
geom_step() +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, fill = "blue") +
labs(title = "Empirical Distribution Functions of pH for All Wines",
x = "pH",
y = "Cumulative Probability")
# Plot good wines
ggplot(ecdf.good, aes(x = x, y = y)) +
geom_step() +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, fill = "red") +
labs(title = "Empirical Distribution Functions of pH for Good Wines",
x = "pH",
y = "Cumulative Probability")
# Plot bad wines
ggplot(ecdf.bad, aes(x = x, y = y)) +
geom_step() +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, fill = "blue") +
labs(title = "Empirical Distribution Functions of pH for Bad Wines",
x = "pH",
y = "Cumulative Probability")
# Function to calculate ecdf and confidence intervals
ecdf.with.ci <- function(data, alpha = 0.05) {
n <- length(data)
ecdf.data <- ecdf(data)
x <- sort(unique(data))
y <- ecdf.data(x)
epsilon <- sqrt((1/(2*n)) * log(2/alpha))
lower <- pmax(y - epsilon, 0)
upper <- pmin(y + epsilon, 1)
data.frame(x = x, y = y, lower = lower, upper = upper)
}
pH.good <- working.df %>% filter(good == 1) %>% pull(pH)
pH.bad <- working.df %>% filter(good == 0) %>% pull(pH)
pH.all <- working.df %>% pull(pH)
ecdf.all <- ecdf.with.ci(pH.all)
ecdf.good <- ecdf.with.ci(pH.good)
ecdf.bad <- ecdf.with.ci(pH.bad)
# Plot all wines
ggplot(ecdf.all, aes(x = x, y = y)) +
geom_step() +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, fill = "blue") +
labs(title = "Empirical Distribution Functions of pH for All Wines",
x = "pH",
y = "Cumulative Probability")
# Plot good wines
ggplot(ecdf.good, aes(x = x, y = y)) +
geom_step() +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, fill = "blue") +
labs(title = "Empirical Distribution Functions of pH for Good Wines",
x = "pH",
y = "Cumulative Probability")
# Plot bad wines
ggplot(ecdf.bad, aes(x = x, y = y)) +
geom_step() +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, fill = "blue") +
labs(title = "Empirical Distribution Functions of pH for Bad Wines",
x = "pH",
y = "Cumulative Probability")
# Function to calculate ecdf and confidence intervals
ecdf.with.ci <- function(data, alpha = 0.05) {
n <- length(data)
ecdf.data <- ecdf(data)
x <- sort(unique(data))
y <- ecdf.data(x)
epsilon <- sqrt((1/(2*n)) * log(2/alpha))
lower <- pmax(y - epsilon, 0)
upper <- pmin(y + epsilon, 1)
data.frame(x = x, y = y, lower = lower, upper = upper)
}
pH.good <- working.df %>% filter(good == 1) %>% pull(pH)
pH.bad <- working.df %>% filter(good == 0) %>% pull(pH)
pH.all <- working.df %>% pull(pH)
ecdf.all <- ecdf.with.ci(pH.all)
ecdf.good <- ecdf.with.ci(pH.good)
ecdf.bad <- ecdf.with.ci(pH.bad)
# Plot all wines
ggplot(ecdf.all, aes(x = x, y = y)) +
geom_step() +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, fill = "blue") +
labs(title = "Empirical Distribution Functions of pH for All Wines",
x = "pH",
y = "Cumulative Probability")
# Plot good wines
ggplot(ecdf.good, aes(x = x, y = y)) +
geom_step(color = "red") +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, fill = "lightblue") +
labs(title = "Empirical Distribution Functions of pH for Good Wines",
x = "pH",
y = "Cumulative Probability")
# Plot bad wines
ggplot(ecdf.bad, aes(x = x, y = y)) +
geom_step() +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, fill = "blue") +
labs(title = "Empirical Distribution Functions of pH for Bad Wines",
x = "pH",
y = "Cumulative Probability")
# Function to calculate ecdf and confidence intervals
ecdf.with.ci <- function(data, alpha = 0.05) {
n <- length(data)
ecdf.data <- ecdf(data)
x <- sort(unique(data))
y <- ecdf.data(x)
epsilon <- sqrt((1/(2*n)) * log(2/alpha))
lower <- pmax(y - epsilon, 0)
upper <- pmin(y + epsilon, 1)
data.frame(x = x, y = y, lower = lower, upper = upper)
}
pH.good <- working.df %>% filter(good == 1) %>% pull(pH)
pH.bad <- working.df %>% filter(good == 0) %>% pull(pH)
pH.all <- working.df %>% pull(pH)
ecdf.all <- ecdf.with.ci(pH.all)
ecdf.good <- ecdf.with.ci(pH.good)
ecdf.bad <- ecdf.with.ci(pH.bad)
# Plot all wines
ggplot(ecdf.all, aes(x = x, y = y)) +
geom_step() +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, fill = "blue") +
labs(title = "Empirical Distribution Functions of pH for All Wines",
x = "pH",
y = "Cumulative Probability")
# Plot good wines
ggplot(ecdf.good, aes(x = x, y = y)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, fill = "lightblue") +
geom_step(color = "red") +
labs(title = "Empirical Distribution Functions of pH for Good Wines",
x = "pH",
y = "Cumulative Probability")
# Plot bad wines
ggplot(ecdf.bad, aes(x = x, y = y)) +
geom_step() +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, fill = "blue") +
labs(title = "Empirical Distribution Functions of pH for Bad Wines",
x = "pH",
y = "Cumulative Probability")
# Function to calculate ecdf and confidence intervals
ecdf.with.ci <- function(data, alpha = 0.05) {
n <- length(data)
ecdf.data <- ecdf(data)
x <- sort(unique(data))
y <- ecdf.data(x)
epsilon <- sqrt((1/(2*n)) * log(2/alpha))
lower <- pmax(y - epsilon, 0)
upper <- pmin(y + epsilon, 1)
data.frame(x = x, y = y, lower = lower, upper = upper)
}
pH.good <- working.df %>% filter(good == 1) %>% pull(pH)
pH.bad <- working.df %>% filter(good == 0) %>% pull(pH)
pH.all <- working.df %>% pull(pH)
ecdf.all <- ecdf.with.ci(pH.all)
ecdf.good <- ecdf.with.ci(pH.good)
ecdf.bad <- ecdf.with.ci(pH.bad)
# Plot all wines
ggplot(ecdf.all, aes(x = x, y = y)) +
geom_step() +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, fill = "blue") +
labs(title = "Empirical Distribution Functions of pH for All Wines",
x = "pH",
y = "Cumulative Probability")
# Plot good wines
ggplot(ecdf.good, aes(x = x, y = y)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.8, fill = "lightblue") +
geom_step(color = "red") +
labs(title = "Empirical Distribution Functions of pH for Good Wines",
x = "pH",
y = "Cumulative Probability")
# Plot bad wines
ggplot(ecdf.bad, aes(x = x, y = y)) +
geom_step() +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, fill = "blue") +
labs(title = "Empirical Distribution Functions of pH for Bad Wines",
x = "pH",
y = "Cumulative Probability")
# Function to calculate ecdf and confidence intervals
ecdf.with.ci <- function(data, alpha = 0.05) {
n <- length(data)
ecdf.data <- ecdf(data)
x <- sort(unique(data))
y <- ecdf.data(x)
epsilon <- sqrt((1/(2*n)) * log(2/alpha))
lower <- pmax(y - epsilon, 0)
upper <- pmin(y + epsilon, 1)
data.frame(x = x, y = y, lower = lower, upper = upper)
}
pH.good <- working.df %>% filter(good == 1) %>% pull(pH)
pH.bad <- working.df %>% filter(good == 0) %>% pull(pH)
pH.all <- working.df %>% pull(pH)
ecdf.all <- ecdf.with.ci(pH.all)
ecdf.good <- ecdf.with.ci(pH.good)
ecdf.bad <- ecdf.with.ci(pH.bad)
# Plot all wines
ggplot(ecdf.all, aes(x = x, y = y)) +
geom_step() +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, fill = "blue") +
labs(title = "Empirical Distribution Functions of pH for All Wines",
x = "pH",
y = "Cumulative Probability")
# Plot good wines
ggplot(ecdf.good, aes(x = x, y = y)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.8, fill = "blue") +
geom_step(color = "red") +
labs(title = "Empirical Distribution Functions of pH for Good Wines",
x = "pH",
y = "Cumulative Probability")
# Plot bad wines
ggplot(ecdf.bad, aes(x = x, y = y)) +
geom_step() +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, fill = "blue") +
labs(title = "Empirical Distribution Functions of pH for Bad Wines",
x = "pH",
y = "Cumulative Probability")
# Function to calculate ecdf and confidence intervals
ecdf.with.ci <- function(data, alpha = 0.05) {
n <- length(data)
ecdf.data <- ecdf(data)
x <- sort(unique(data))
y <- ecdf.data(x)
epsilon <- sqrt((1/(2*n)) * log(2/alpha))
lower <- pmax(y - epsilon, 0)
upper <- pmin(y + epsilon, 1)
data.frame(x = x, y = y, lower = lower, upper = upper)
}
pH.good <- working.df %>% filter(good == 1) %>% pull(pH)
pH.bad <- working.df %>% filter(good == 0) %>% pull(pH)
pH.all <- working.df %>% pull(pH)
ecdf.all <- ecdf.with.ci(pH.all)
ecdf.good <- ecdf.with.ci(pH.good)
ecdf.bad <- ecdf.with.ci(pH.bad)
# Plot all wines
ggplot(ecdf.all, aes(x = x, y = y)) +
geom_step() +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, fill = "blue") +
labs(title = "Empirical Distribution Functions of pH for All Wines",
x = "pH",
y = "Cumulative Probability")
# Plot good wines
ggplot(ecdf.good, aes(x = x, y = y)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, fill = "blue") +
geom_step(color = "red") +
labs(title = "Empirical Distribution Functions of pH for Good Wines",
x = "pH",
y = "Cumulative Probability")
# Plot bad wines
ggplot(ecdf.bad, aes(x = x, y = y)) +
geom_step() +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, fill = "blue") +
labs(title = "Empirical Distribution Functions of pH for Bad Wines",
x = "pH",
y = "Cumulative Probability")
# Function to calculate ecdf and confidence intervals
ecdf.with.ci <- function(data, alpha = 0.05) {
n <- length(data)
ecdf.data <- ecdf(data)
x <- sort(unique(data))
y <- ecdf.data(x)
epsilon <- sqrt((1/(2*n)) * log(2/alpha))
lower <- pmax(y - epsilon, 0)
upper <- pmin(y + epsilon, 1)
data.frame(x = x, y = y, lower = lower, upper = upper)
}
pH.good <- working.df %>% filter(good == 1) %>% pull(pH)
pH.bad <- working.df %>% filter(good == 0) %>% pull(pH)
pH.all <- working.df %>% pull(pH)
ecdf.all <- ecdf.with.ci(pH.all)
ecdf.good <- ecdf.with.ci(pH.good)
ecdf.bad <- ecdf.with.ci(pH.bad)
# Plot all wines
ggplot(ecdf.all, aes(x = x, y = y)) +
geom_step() +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, fill = "blue") +
labs(title = "Empirical Distribution Functions of pH for All Wines",
x = "pH",
y = "Cumulative Probability")
# Plot good wines
ggplot(ecdf.good, aes(x = x, y = y)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.3, fill = "blue") +
geom_step(color = "red") +
labs(title = "Empirical Distribution Functions of pH for Good Wines",
x = "pH",
y = "Cumulative Probability")
# Plot bad wines
ggplot(ecdf.bad, aes(x = x, y = y)) +
geom_step() +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, fill = "blue") +
labs(title = "Empirical Distribution Functions of pH for Bad Wines",
x = "pH",
y = "Cumulative Probability")
# Function to calculate ecdf and confidence intervals
ecdf.with.ci <- function(data, alpha = 0.05) {
n <- length(data)
ecdf.data <- ecdf(data)
x <- sort(unique(data))
y <- ecdf.data(x)
epsilon <- sqrt((1/(2*n)) * log(2/alpha))
lower <- pmax(y - epsilon, 0)
upper <- pmin(y + epsilon, 1)
data.frame(x = x, y = y, lower = lower, upper = upper)
}
pH.good <- working.df %>% filter(good == 1) %>% pull(pH)
pH.bad <- working.df %>% filter(good == 0) %>% pull(pH)
pH.all <- working.df %>% pull(pH)
ecdf.all <- ecdf.with.ci(pH.all)
ecdf.good <- ecdf.with.ci(pH.good)
ecdf.bad <- ecdf.with.ci(pH.bad)
# Plot all wines
ggplot(ecdf.all, aes(x = x, y = y)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.3, fill = "blue") +
geom_step(color = "red") +
labs(title = "Empirical Distribution Functions of pH for All Wines",
x = "pH",
y = "Cumulative Probability")
# Plot good wines
ggplot(ecdf.good, aes(x = x, y = y)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.3, fill = "blue") +
geom_step(color = "red") +
labs(title = "Empirical Distribution Functions of pH for Good Wines",
x = "pH",
y = "Cumulative Probability")
# Plot bad wines
ggplot(ecdf.bad, aes(x = x, y = y)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.3, fill = "blue") +
geom_step(color = "red") +
labs(title = "Empirical Distribution Functions of pH for Bad Wines",
x = "pH",
y = "Cumulative Probability")
# Function to calculate ecdf and uniform confidence intervals using KS method
ecdf.with.ks.ci <- function(data, alpha = 0.05) {
n <- length(data)
ecdf.data <- ecdf(data)
x <- sort(unique(data))
y <- ecdf.data(x)
# Kolmogorov-Smirnov criterion for confidence bands
k.alpha <- sqrt(-0.5 * log(alpha / 2))
epsilon <- k.alpha / sqrt(n)
lower <- pmax(y - epsilon, 0)
upper <- pmin(y + epsilon, 1)
data.frame(x = x, y = y, lower = lower, upper = upper)
}
# From this line on: same code as in Exercise (c)
pH.good <- working.df %>% filter(good == 1) %>% pull(pH)
pH.bad <- working.df %>% filter(good == 0) %>% pull(pH)
pH.all <- working.df %>% pull(pH)
ecdf.all <- ecdf.with.ci(pH.all)
ecdf.good <- ecdf.with.ci(pH.good)
ecdf.bad <- ecdf.with.ci(pH.bad)
# Plot all wines
ggplot(ecdf.all, aes(x = x, y = y)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.3, fill = "blue") +
geom_step(color = "red") +
labs(title = "Empirical Distribution Functions of pH for All Wines",
x = "pH",
y = "Cumulative Probability")
# Plot good wines
ggplot(ecdf.good, aes(x = x, y = y)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.3, fill = "blue") +
geom_step(color = "red") +
labs(title = "Empirical Distribution Functions of pH for Good Wines",
x = "pH",
y = "Cumulative Probability")
# Plot bad wines
ggplot(ecdf.bad, aes(x = x, y = y)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.3, fill = "blue") +
geom_step(color = "red") +
labs(title = "Empirical Distribution Functions of pH for Bad Wines",
x = "pH",
y = "Cumulative Probability")
# Function to calculate ecdf and confidence intervals
ecdf.with.ci <- function(data, alpha = 0.05) {
n <- length(data)
ecdf.data <- ecdf(data)
x <- sort(unique(data))
y <- ecdf.data(x)
epsilon <- sqrt(var(data) * log(2 / alpha))
lower <- pmax(y - epsilon, 0)
upper <- pmin(y + epsilon, 1)
data.frame(x = x, y = y, lower = lower, upper = upper)
}
pH.good <- working.df %>% filter(good == 1) %>% pull(pH)
pH.bad <- working.df %>% filter(good == 0) %>% pull(pH)
pH.all <- working.df %>% pull(pH)
ecdf.all <- ecdf.with.ci(pH.all)
ecdf.good <- ecdf.with.ci(pH.good)
ecdf.bad <- ecdf.with.ci(pH.bad)
# Plot all wines
ggplot(ecdf.all, aes(x = x, y = y)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.3, fill = "blue") +
geom_step(color = "red") +
labs(title = "Empirical Distribution Functions of pH for All Wines",
x = "pH",
y = "Cumulative Probability")
# Plot good wines
ggplot(ecdf.good, aes(x = x, y = y)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.3, fill = "blue") +
geom_step(color = "red") +
labs(title = "Empirical Distribution Functions of pH for Good Wines",
x = "pH",
y = "Cumulative Probability")
# Plot bad wines
ggplot(ecdf.bad, aes(x = x, y = y)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.3, fill = "blue") +
geom_step(color = "red") +
labs(title = "Empirical Distribution Functions of pH for Bad Wines",
x = "pH",
y = "Cumulative Probability")
# Function to calculate ecdf and uniform confidence intervals using KS method
ecdf.with.ks.ci <- function(data, alpha = 0.05) {
n <- length(data)
ecdf.data <- ecdf(data)
x <- sort(unique(data))
y <- ecdf.data(x)
# Kolmogorov-Smirnov criterion for confidence bands
epsilon <- sqrt(-0.5 * log(alpha / 2)) / sqrt(n)
lower <- pmax(y - epsilon, 0)
upper <- pmin(y + epsilon, 1)
data.frame(x = x, y = y, lower = lower, upper = upper)
}
# From this line on: same code as in Exercise (c)
pH.good <- working.df %>% filter(good == 1) %>% pull(pH)
pH.bad <- working.df %>% filter(good == 0) %>% pull(pH)
pH.all <- working.df %>% pull(pH)
ecdf.all <- ecdf.with.ci(pH.all)
ecdf.good <- ecdf.with.ci(pH.good)
ecdf.bad <- ecdf.with.ci(pH.bad)
# Plot all wines
ggplot(ecdf.all, aes(x = x, y = y)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.3, fill = "blue") +
geom_step(color = "red") +
labs(title = "Empirical Distribution Functions of pH for All Wines",
x = "pH",
y = "Cumulative Probability")
# Plot good wines
ggplot(ecdf.good, aes(x = x, y = y)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.3, fill = "blue") +
geom_step(color = "red") +
labs(title = "Empirical Distribution Functions of pH for Good Wines",
x = "pH",
y = "Cumulative Probability")
# Plot bad wines
ggplot(ecdf.bad, aes(x = x, y = y)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.3, fill = "blue") +
geom_step(color = "red") +
labs(title = "Empirical Distribution Functions of pH for Bad Wines",
x = "pH",
y = "Cumulative Probability")
# Function to calculate ecdf and uniform confidence intervals using KS method
ecdf.with.ks.ci <- function(data, alpha = 0.05) {
n <- length(data)
ecdf.data <- ecdf(data)
x <- sort(unique(data))
y <- ecdf.data(x)
# Kolmogorov-Smirnov criterion for confidence bands
epsilon <- sqrt(-0.5 * log(alpha / 2)) / sqrt(n)
lower <- pmax(y - epsilon, 0)
upper <- pmin(y + epsilon, 1)
data.frame(x = x, y = y, lower = lower, upper = upper)
}
# From this line on: same code as in Exercise (c)
pH.good <- working.df %>% filter(good == 1) %>% pull(pH)
pH.bad <- working.df %>% filter(good == 0) %>% pull(pH)
pH.all <- working.df %>% pull(pH)
ecdf.all <- ecdf.with.ks.ci(pH.all)
ecdf.good <- ecdf.with.ks.ci(pH.good)
ecdf.bad <- ecdf.with.ks.ci(pH.bad)
# Plot all wines
ggplot(ecdf.all, aes(x = x, y = y)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.3, fill = "blue") +
geom_step(color = "red") +
labs(title = "Empirical Distribution Functions of pH for All Wines",
x = "pH",
y = "Cumulative Probability")
# Plot good wines
ggplot(ecdf.good, aes(x = x, y = y)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.3, fill = "blue") +
geom_step(color = "red") +
labs(title = "Empirical Distribution Functions of pH for Good Wines",
x = "pH",
y = "Cumulative Probability")
# Plot bad wines
ggplot(ecdf.bad, aes(x = x, y = y)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.3, fill = "blue") +
geom_step(color = "red") +
labs(title = "Empirical Distribution Functions of pH for Bad Wines",
x = "pH",
y = "Cumulative Probability")
