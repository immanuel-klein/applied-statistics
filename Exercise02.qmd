---
title: "Exercise02"
format: html
editor: visual
---

```{r}
library("tidyverse")
library("ggplot2")
```

# 2 Examine the distribution

Reading the data:

```{r}
#Reading the whole data set
winequality.white <- read.csv("wine+quality/winequality-white.csv", sep = ";")

#Using only volatile.acidity, residual.sugar, and pH and adding binary variable good which is 1 if quality > 5 and 0 otherwise.
working.df <- winequality.white %>%
  mutate(good = ifelse(quality > 5, 1, 0)) %>%
  select(volatile.acidity, residual.sugar, pH, good)

head(working.df)
```

## Exercise (a)

```{r}
pH.mean <- working.df %>% pull(pH) %>% mean()
pH.sd <- working.df %>% pull(pH) %>% sd()

pH.good.mean <- working.df %>% filter(good == 1) %>% pull(pH) %>% mean()
pH.good.sd <- working.df %>% filter(good == 1) %>% pull(pH) %>% sd()

pH.bad.mean <- working.df %>% filter(good == 0) %>% pull(pH) %>% mean()
pH.bad.sd <- working.df %>% filter(good == 0) %>% pull(pH) %>% sd()

# Plot histogram of pH for all wines
ggplot(working.df, aes(x = pH)) +
  geom_histogram(aes(y = ..density..), bins = 30, alpha = 0.5) + 
  labs(title = "Histogram of pH", 
       x = "pH", 
       y = "Frequency") + 
  stat_function(fun = dnorm, 
                args = c(mean = pH.mean, sd = pH.sd), 
                color = "red")

ggplot(working.df) +
  aes(x = pH, fill = factor(good)) +
  geom_histogram(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + 
  labs(title = "Histogram of pH", 
       x = "pH", 
       y = "Frequency", 
       fill = "Good Wine") +
  stat_function(fun = dnorm, 
                args = c(mean = pH.good.mean, sd = pH.good.sd), 
                color = "red") +
  stat_function(fun = dnorm, 
                args = c(mean = pH.bad.mean, sd = pH.bad.sd), 
                color = "blue")
```

To-Do: Bin width!!!

good wines are close to normally distributed, bad wines not so much

## Exercise (b)

```{r}
pH.good <- working.df %>% filter(good == 1) %>% pull(pH)
pH.bad <- working.df %>% filter(good == 0) %>% pull(pH)
pH.all <- working.df %>% pull(pH)

#QQ-Plots:
ggplot(data.frame(pH = pH.good), aes(sample = pH)) +
  geom_qq() +
  geom_qq_line(col = "red") +
  labs(x = "Theoretical Quantiles",
       y = "Empirical Quantiles",
       title = "QQ: pH of Good Wines against Normal Distr.")

ggplot(data.frame(pH = pH.bad), aes(sample = pH)) +
  geom_qq() +
  geom_qq_line(col = "red") +
  labs(x = "Theoretical Quantiles",
       y = "Empirical Quantiles",
       title = "QQ: pH of Bad Wines against Normal Distr.")

ggplot(data.frame(pH = pH.all), aes(sample = pH)) +
  geom_qq() +
  geom_qq_line(col = "red") +
  labs(x = "Theoretical Quantiles",
       y = "Empirical Quantiles",
       title = "QQ: pH of All Wines against Normal Distr.")

#Data-Prep for PP-Plots
ecdf.pH.all <- ecdf(sort(pH.all))
norm.all <- pnorm(sort(pH.All), mean(pH.all), sd = sd(pH.all))

ecdf.pH.good <- ecdf(sort(pH.good))
norm.good <- pnorm(sort(pH.good), mean(pH.good), sd = sd(pH.good))

ecdf.pH.bad <- ecdf(sort(pH.bad))
norm.bad <- pnorm(sort(pH.bad), mean(pH.bad), sd = sd(pH.bad))

#PP-Plots
ggplot(data.frame(norm.all, ecdf.pH.all(sort(pH.all))), 
       aes(x = norm.all, y = ecdf.pH.all(sort(pH.all)))) +
  geom_point() +
  geom_abline(intercept = 0, slope = 1, color = "red") +
  labs(x = "Theoretical Probabilities",
       y = "Empirical Probabilities",
       title = "PP: pH of All Wines against Normal Distr.")

ggplot(data.frame(norm.good, ecdf.pH.good(sort(pH.good))), 
       aes(x = norm.good, y = ecdf.pH.good(sort(pH.good)))) +
  geom_point() +
  geom_abline(intercept = 0, slope = 1, color = "red") +
  labs(x = "Theoretical Probabilities",
       y = "Empirical Probabilities",
       title = "PP: pH of Good Wines against Normal Distr.")

ggplot(data.frame(norm.bad, ecdf.pH.bad(sort(pH.bad))), 
       aes(x = norm.bad, y = ecdf.pH.bad(sort(pH.bad)))) +
  geom_point() +
  geom_abline(intercept = 0, slope = 1, color = "red") +
  labs(x = "Theoretical Probabilities",
       y = "Empirical Probabilities",
       title = "PP: pH of Bad Wines against Normal Distr.")
```

## Exercise (c)

```{r}
library("sfsmisc")
pH.good <- working.df %>% filter(good == 1) %>% pull(pH)
pH.bad <- working.df %>% filter(good == 0) %>% pull(pH)
pH.all <- working.df %>% pull(pH)

ecdf.ksCI(pH.all)
ggplot(data.frame(pH = pH.all), aes(x = pH)) +
  stat_ecdf() +
  labs(title = "Empirical Distribution Functions of pH for All Wines", 
       x = "pH", 
       y = "Cumulative Probability")

ggplot(data.frame(pH = pH.good), aes(x = pH)) +
  stat_ecdf() +
  labs(title = "Empirical Distribution Functions of pH for Good Wines", 
       x = "pH", 
       y = "Cumulative Probability")

ggplot(data.frame(pH = pH.bad), aes(x = pH)) +
  stat_ecdf() +
  labs(title = "Empirical Distribution Functions of pH for Bad Wines", 
       x = "pH", 
       y = "Cumulative Probability")
```

Confidence bands fehlen noch
